; ===================================================================
; Configuration File for XtoMNK (XInput to Mouse and Keyboard)
; ===================================================================
; This file allows you to customize every aspect of the controller mapper.
; Lines starting with a semicolon (;) are comments and are ignored.

[Hooks]
; This section is for advanced users. Hooks intercept communication
; between the game and Windows. It is recommended to leave these enabled
; unless you encounter a specific problem. 1 = Enabled, 0 = Disabled.
ClipCursorHook=0
GetKeystateHook=1
GetAsynckeystateHook=1
GetCursorposHook=1
SetCursorposHook=1
SetCursorHook=1

; ===================================================================

[Settings]
; This section controls the global behavior of the DLL.

; SendMethod
; Controls the underlying Windows API used to send inputs.
; 0 = PostMessage (Default). Best for compatibility and sending input to background windows.
; 1 = SendInput. Lower-level method, may be required for some games with anti-cheat.
SendMethod=0

; Controllerid
; The ID of the controller you want to use (0=First, 1=Second, etc.).
Controllerid=0

; Initial Mode
; Sets the mode the DLL starts in.
; 0 = Keyboard-Only Mode. The virtual cursor is disabled. Both sticks can be used for keys.
; 1 = Cursor Mode (Default). The virtual cursor is enabled.
Mode=1

; DrawFakeCursor
; Toggles the drawing of the on-screen cursor and notification messages.
; 1 = Enabled (Default), 0 = Disabled.
DrawFakeCursor=1

; AlwaysDrawCursor
; If enabled, the fake cursor will be drawn even if the game tries to hide it.
; 1 = Enabled, 0 = Disabled (Default).
AlwaysDrawCursor=0

; Responsetime
; The delay (in milliseconds) at the end of each polling loop.
; 0 or 1 is recommended for maximum button responsiveness.
Responsetime=0

; ===================================================================

[StickToMouse]
; This section controls the feel of the analog stick when it's used to move the mouse cursor.

; Righthanded
; Controls which analog stick is used for cursor movement in Cursor Mode.
; 0 = Left stick moves cursor (Default).
; 1 = Right stick moves cursor.
Righthanded=1

; Sensitivity
; The base speed of the cursor. Higher values make the cursor move faster.
Sensitivity=1.45

; Accel_Multiplier
; A multiplier that affects the final speed after the acceleration curve is applied.
Accel_Multiplier=3.0

; Radial_Deadzone
; The size of the "no-move" zone in the center of the analog stick.
; This affects BOTH cursor movement and when a stick direction is used as a button.
; Range: 0.0 (0%) to 1.0 (100%).
Radial_Deadzone=0.1

; Axial_Deadzone
; Helps with making perfect horizontal or vertical movements.
; Range: 0.0 (0%) to 1.0 (100%).
Axial_Deadzone=0.0

; Max_Threshold
; An "outer deadzone." Allows the cursor to reach max speed before the stick is fully pushed.
; Range: 0.0 (0%) to 0.15 (15%).
Max_Threshold=0.01

; Curve_Slope & Curve_Exponent
; These two values control the acceleration curve of the stick.
; Curve_Slope: The initial, linear part of the movement. Higher value = more linear.
; Curve_Exponent: How sharply the speed ramps up. Higher value = more acceleration.
Curve_Slope=0.30
Curve_Exponent=6.50

; ===================================================================

[KeyMapping]
; This is where you map your controller buttons to specific mouse or keyboard actions.
; Use the Action Code Reference list to find the number for the key you want from GtoMnK_Keys.txt file.
; You can combine multiple keys by separating them with a plus sign '+'.
; You can also use caret '^' for key action when button is released. And use asterisk '*' for delay action key. (e.g X=^42+*30) press X to reload(R key) or hold X to get a weapon(F key).

; EnableMouseDoubleClick
; If enabled (1), any action mapped to Left Click (-1) will
; automatically gain double-click capability.
EnableMouseDoubleClick=0

; StickAsButtonDeadzone
; Defines how far you must push an analog stick for it to register as a button press.
; Value is a percentage from 0.1 (10%) to 1.0 (100%).
; A lower value is more sensitive.
StickAsButtonDeadzone=0.25

; TriggerThreshold
; Defines how far you must pull an analog trigger for it to register as a press.
; Value is from 0 (hair trigger) to 255 (must be pulled all the way).
TriggerThreshold=175

; Face Buttons
A = 13
B = 0
X = 42
Y = 0

; Shoulder Buttons & Thumbs
RB = 0
LB = 0
RSB = 0
LSB = 4

; D-PAD
; Preset for Arrow Keys
D_UP = 14
D_DOWN = 15
D_LEFT = 16
D_RIGHT = 17

; LEFT STICK (as Buttons)
; Preset for WASD
LSU = 47
LSD = 43
LSL = 25
LSR = 28

; RIGHT STICK (as Buttons)
RSU = 0
RSD = 0
RSL = 0
RSR = 0

; System Buttons
; Preset for Escape and TAB
Start = 1
Back = 3

; Triggers
; Preset for mouse buttons
RT = -1
LT = -2